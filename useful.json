Ubuntu:

lsb_release - a

//////////////////////

Multicursor: Ctrl + Alt + (arrow up/down)

def()s and Modules worthwhile:

from collections import Counter
enumerate(alphabet)
zip(heros,alterego)

my_dic.items()
my_dic.get()

my_set.difference(other_set)

string.rindex(character)

xrange(a)
range(a)

arr.index() & arr.rindex()




def myFun(*args,**kwargs):
    print("args: ", args)
    print("kwargs: ", kwargs)
myFun('geeks','for','geeks',first="Geeks",mid="for",last="Geeks")


from collections import defaultdict
hash = defaultdict(int)


q, mod = divmod(10,
3)
print(q, mod)
# 3 1

input = list(map(int, ((input()).strip().split())))

dic.setdefault(value, key)

//////////////////////

PostgreSQL:

sudo service postgresql start
sudo -u postgres psql // Psql Shell

sudo su postgres
su - postgres // locked permanently
psql

create database sample01_april_db;

# \password postgres
CREATE USER mainengine WITH SUPERUSER PASSWORD '132525';
ALTER USER postgres WITH PASSWORD '1314';

//////////////////////

Django SQLite to PostgreSQL

$ python3 manage.py dumpdata > data_backup.json
$ sudo apt update
$ sudo apt install pgadmin4 pgadmin4-apache2
$ pip3 install psycopg2

-- create DATABASE name NEW_DB

'ENGINE':'django.db.backends.postgresql_psycopg2'

$ python3 manage.py migrate
$ python3 manage.py migrate --run-syncdb

$ python3 manage.py loaddata data_backup.json




///////////////////////////////////

sudo /etc/init.d/mysql start

sudo mysql
sudo mysql -u root
mysql -u root -p

mysql> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'your_new_password';
mysql> FLUSH PRIVILEGES;
mysql> quit

---
SELECT TOP 3 * FROM Customers;

SELECT * FROM Customers
LIMIT 3;

SELECT * FROM Customers
FETCH FIRST 3 ROWS ONLY; 

SELECT TOP 50 PERCENT * FROM Customers;

SELECT * FROM Customers
FETCH FIRST 50 PERCENT ROWS ONLY;

-
SELECT column, another_column, …
FROM mytable;
-
SELECT column, another_column, …
FROM mytable
WHERE condition
    AND/OR another_condition
    IN/NOT IN …;
-
SELECT DISTINCT column, another_column, …
FROM mytable
WHERE condition(s);
ORDER BY column ASC/DESC;
LIMIT num_limit OFFSET num_offset;
-




